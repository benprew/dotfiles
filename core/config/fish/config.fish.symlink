function add_path
    set -l new_path $argv[1]
    if test -d $new_path
        # Don't use $fish_user_path variable, it will create duplicates PATH entries
        # https://stackoverflow.com/questions/26208231/modifying-path-with-fish-shell
        #
        # push path to front if it already exists
        fish_add_path --move $new_path
    end
end

function git_branch
    set -g git_branch (git rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ $status -ne 0 ]
        set -ge git_branch
        set -g git_dirty_count 0
    else
        set -g git_dirty_count (git status --porcelain  | wc -l | sed "s/ //g")
    end
end

function fish_prompt
    # c0 to c4 progress from dark to bright
    # ce is the error colour
    set -g c0 (set_color 005284)
    set -g c1 (set_color 0075cd)
    set -g c2 (set_color 009eff)
    set -g c3 (set_color 6dc7ff)
    set -g c4 (set_color ffffff)
    set -g ce (set_color $fish_color_error)

    set -U fish_prompt_pwd_dir_length 0
    printf "$c3"
    echo -n (prompt_pwd)

    git_branch
    if set -q git_branch
        printf " $c4($c2$git_branch$c4)"
    end

    printf "\n$c4><> "
end

set -x EDITOR emacsclient

test -e {$HOME}/.iterm2_shell_integration.fish ; and source {$HOME}/.iterm2_shell_integration.fish

for module in (cat ~/.modules)
    set module_init_path $HOME/dotfiles/$module/init.fish
    if test -e $module_init_path
        . $module_init_path
    end

    if test -e $HOME/dotfiles/$module/bin
        fish_add_path $HOME/dotfiles/$module/bin
    end
end

fish_add_path "/usr/local/bin"
fish_add_path --append "/usr/local/sbin" "$HOME/bin"

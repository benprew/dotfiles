#!/usr/bin/env ruby

require 'nokogiri'
require 'open-uri'

STOPS = %w{ 7763 }
ROUTES = %w{ 190 }

def humanize(secs)
  [[60, :seconds], [60, :minutes], [24, :hours], [1000, :days]].map{ |count, name|
    if secs > 0
      secs, n = secs.divmod(count)
      sprintf("%02d", n.to_i)
    end
  }.compact.reverse.join(':')
end

def get_arrivals
  Nokogiri::XML(open("http://developer.trimet.org/ws/V1/arrivals/locIDs/#{STOPS.join(',')}/appID/3D32A1F10350DCBA446F32AB1"))
end

now = Time.now

arrivals = get_arrivals

locations = {}

arrivals.css('location').each do |location|
  locations[location['locid']] = location
end

arrivals.css('arrival').each do |arrival|
  due = Time.at(arrival['estimated'].to_i / 1000)
  diff = due - now
  due_str = due.strftime('%H:%M')
  diff_str = (diff / 60).to_i
  loc = locations[arrival['locid']]
  if ROUTES.include?(arrival['route']) && diff > (60*8)
    puts "#{arrival['route'].rjust(2)} in #{diff_str} min at #{due_str} #{loc['desc']} #{loc['dir']}"
  end
end
